name: Deploy Prestamos Documentacion to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read


env:
  AWS_REGION: us-east-2
  ECR_REGISTRY: 425784381978.dkr.ecr.us-east-2.amazonaws.com
  ECR_REPOSITORY: banquito-prestamos-documentacion
  ECS_CLUSTER: banquito-cluster
  ECS_SERVICE: banquito-prestamos-documentacion
  CONTAINER_NAME: documentacion-container

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: |
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::425784381978:role/GitHubActions-ECR-Deploy
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: gha-${{ github.run_id }}

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag  $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
          aws ecs wait services-stable --cluster $ECS_CLUSTER --services $ECS_SERVICE
